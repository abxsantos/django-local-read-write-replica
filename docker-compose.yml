version: "3.5"
services:

 # see https://github.com/DanielDent/docker-postgres-replication
  db-write:
    image: "danieldent/postgres-replication"
    restart: "always"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
     - "/var/lib/postgresql/data"
    expose:
     - "5432"

  db-read:
    image: "danieldent/postgres-replication"
    restart: "always"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
      REPLICATE_FROM: "db-write"
    volumes:
     - "/var/lib/postgresql/data"
    expose:
     - "5432"
    links:
     - "db-write"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db-write
      - db-read
    ports:
      - "${DJANGO_BIND_PORT}:${DJANGO_BIND_PORT}"
    command:
      [
        "./wait-for-it.sh",
        "${DB_HOST}:${DB_PORT}",
        "-t",
        "120",
        "--",
        "./start.sh",
      ]

  local-development:
    build:
      context: .
      dockerfile: DockerfileDev
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db-write
      - db-read
    ports:
      - "${DJANGO_BIND_PORT}:${DJANGO_BIND_PORT}"
    command:
      [
        "./wait-for-it.sh",
        "${DB_HOST}:${DB_PORT}",
        "-t",
        "120",
        "--",
        "./start.sh",
      ]

  tests:
    image: python:3.9-slim-buster
    env_file: .env
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      - db-write
      - db-read
    command: >
      sh -c "pip install tox && tox"